// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package tflite

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type AddNOptionsT struct {
}

func (t *AddNOptionsT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil { return 0 }
	AddNOptionsStart(builder)
	return AddNOptionsEnd(builder)
}

func (rcv *AddNOptions) UnPackTo(t *AddNOptionsT) {
}

func (rcv *AddNOptions) UnPack() *AddNOptionsT {
	if rcv == nil { return nil }
	t := &AddNOptionsT{}
	rcv.UnPackTo(t)
	return t
}

type AddNOptions struct {
	_tab flatbuffers.Table
}

func GetRootAsAddNOptions(buf []byte, offset flatbuffers.UOffsetT) *AddNOptions {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &AddNOptions{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *AddNOptions) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *AddNOptions) Table() flatbuffers.Table {
	return rcv._tab
}

func AddNOptionsStart(builder *flatbuffers.Builder) {
	builder.StartObject(0)
}
func AddNOptionsEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
