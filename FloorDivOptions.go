// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package tflite

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type FloorDivOptionsT struct {
}

func (t *FloorDivOptionsT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil { return 0 }
	FloorDivOptionsStart(builder)
	return FloorDivOptionsEnd(builder)
}

func (rcv *FloorDivOptions) UnPackTo(t *FloorDivOptionsT) {
}

func (rcv *FloorDivOptions) UnPack() *FloorDivOptionsT {
	if rcv == nil { return nil }
	t := &FloorDivOptionsT{}
	rcv.UnPackTo(t)
	return t
}

type FloorDivOptions struct {
	_tab flatbuffers.Table
}

func GetRootAsFloorDivOptions(buf []byte, offset flatbuffers.UOffsetT) *FloorDivOptions {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &FloorDivOptions{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *FloorDivOptions) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *FloorDivOptions) Table() flatbuffers.Table {
	return rcv._tab
}

func FloorDivOptionsStart(builder *flatbuffers.Builder) {
	builder.StartObject(0)
}
func FloorDivOptionsEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
