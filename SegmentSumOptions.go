// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package tflite

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type SegmentSumOptionsT struct {
}

func (t *SegmentSumOptionsT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil { return 0 }
	SegmentSumOptionsStart(builder)
	return SegmentSumOptionsEnd(builder)
}

func (rcv *SegmentSumOptions) UnPackTo(t *SegmentSumOptionsT) {
}

func (rcv *SegmentSumOptions) UnPack() *SegmentSumOptionsT {
	if rcv == nil { return nil }
	t := &SegmentSumOptionsT{}
	rcv.UnPackTo(t)
	return t
}

type SegmentSumOptions struct {
	_tab flatbuffers.Table
}

func GetRootAsSegmentSumOptions(buf []byte, offset flatbuffers.UOffsetT) *SegmentSumOptions {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &SegmentSumOptions{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *SegmentSumOptions) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *SegmentSumOptions) Table() flatbuffers.Table {
	return rcv._tab
}

func SegmentSumOptionsStart(builder *flatbuffers.Builder) {
	builder.StartObject(0)
}
func SegmentSumOptionsEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
